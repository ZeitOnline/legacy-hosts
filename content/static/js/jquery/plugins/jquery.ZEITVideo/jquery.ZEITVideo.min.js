(function($) {
    /*
    * Zeit Online Video & Audio Embedding Plugin
    * This script embeds videos and audios from div tags and uses class names as parameters
    * 
    * set url parameter "&debug=true" to enable debug mode!
    *
    * depends on jquery.swfobject: jquery.thewikies.com/swfobject/
    *  
    * Copyright (c) 2009 ZEIT ONLINE, http://www.zeit.de
    * Dual licensed under the MIT and GPL licenses:
    * http://www.opensource.org/licenses/mit-license.php
    * http://www.gnu.org/licenses/gpl.html
    *
    *
    * @author Marc Tönsing, Nico Brünjes
    * Version 1.1
    */
    $.fn.zolvideo = function (defaults) {

        var options = $.extend({
            debug               : ZEIT.getQuery(window.location.search).debug, 
            cache_url           : 'http://services.brightcove.com/services/messagebroker/amf',
            api_read_key        : 'Y-oebuXNRyvEBf14nwn0Z4OgaFaxhT28c7eeHSPMvOMVr78dvsdyhQ..',
            api_base_url        : 'http://api.brightcove.com/services/library?command=',
            api_fields          : 'name,shortdescription,longdescription,videoStillURL',
            service_url         : 'http://c.brightcove.com/services/viewer/federated_f9',                   
            ressort             : ZEIT.getRessort(),
            mediatypes          : {
                pls                 : {
                            publisher_id: 18140073001,
                            playerid    : 64924251001, //player with gui elements
                            playerid_noc: 64924251001, //player without gui elements
                            urlpostfix  : 'isVid=1&isUI=1&%40videoList=',
                            api_command : 'find_playlist_by_id&playlist_id='
                },
                vid                 : {
                            publisher_id: 18140073001,
                            playerid    : 71289488001, //player with gui elements
                            playerid_noc: 71289488001, //player without gui elements
                            urlpostfix  : 'isVid=1&isUI=1&videoSmoothing=true&%40videoPlayer=',
                            api_command : 'find_videos_by_ids&video_ids='
                },      
                aud                 : {
                            publisher_id: 35067911001,
                            playerid    : 41331465001, //player with gui elements
                            playerid_noc: 41331465001, //player without cover
                            urlpostfix  : 'isUI=true&isAudio=true&%40audioPlayer=ref:'
                }
            },
            playertypes         : {
                art_wide            : {
                    
                        width           : 540,
                        height          : 302,
                        wrap            : 'block',
                        title           : '<div class="headline iconvid_inline"></div>',
                        description     : '<p class="caption"></p>',
                        desc_length     : 'short',
                        controls        : true
                },
                art_wide_hd         : {
                    
                        width           : 940,
                        height          : 520,
                        wrap            : 'block',
                        title           : '<div class="headline iconvid_inline"></div>',
                        description     : '<p class="caption"></p>',
                        desc_length     : 'short',
                        controls        : true
                },
                aufmacher           : {
                        width           : 540,
                        height          : 302,
                        description     : '<p class="caption"></p>',
                        wrap            : 'block',
                        desc_length     : false,
                        controls        : true
                },
                mosaic              : {
                        width           : 220,
                        height          : 124,
                        title           : '<div class="title"></div>',
                        description     : '<p></p>',
                        desc_length     : 'long',
                        title_bottom    : true,
                        controls        : false
                },
                quiz                : {
                        wrap            : 'left',
                        width           : 215,
                        height          : 176,
                        description     : '<div class="caption"></div>',
                        desc_length     : 'short',
                        controls        : false
                },
                inf_wide            : {
                        wrap            : '',
                        width           : 370,
                        height          : 207   ,
                        title           : '<div class="title"></div>',
                        desc_length     : 'short',
                        controls        : true
                },
                art_double          : {
                        wrap            : 'block',
                        width           : 260,
                        height          : 145,
                    
                        description     : '<div class="caption"></div>',
                        desc_length     : 'short',
                        controls        : true
                },
                art_narrow          : {
                        wrap            : 'inline video inline_wide',
                        width           : 261,
                        height          : 146,
                        title           : '<div class="headline iconvid_inline"></div>',
                        description     : '<div class="caption"></div>',
                        desc_length     : 'short',
                        controls        : true
                },
                aud_narrow          : {
                        wrap            : 'inline video inline_wide',
                        width           : 260,
                        height          : 110,
                        title           : '<div class="headline iconvid_inline"></div>',
                        controls        : true
                }
            },
            gruesseanalle       : 'gruessezuruek'
        }, defaults);

    
        
        var getID       = function (id,str,length) {
            // get id from class name
            var pos = str.search(id);
            return (pos <= 0) ? str.substring(pos+length) : false;
        };
        
        $.fn.getMeta    = function (mediatype,playertype,mediaID) {
            var that = $(this);

            var jsonurl =   options.api_base_url +
                            options.mediatypes[mediatype].api_command + 
                            mediaID + 
                            "&fields=" + options.api_fields + 
                            "&token="+ options.api_read_key + 
                            "&callback=?";

            $.getJSON(jsonurl, function(data2) {
                that.setDynamicContent("title"  ,getDataField(data2,"name"));
                that.setDynamicContent("caption",getDataField(data2,options.playertypes[playertype].desc_length + "Description"));          
            
            });

        };

        var getDataField = function(jsonobj, fieldname){
            var json_field = '';
            try{
                if(jsonobj.items[0][fieldname] !== undefined){
                    json_field = jsonobj.items[0][fieldname];
                }else{
                    throw "fatal json error";
                }
            }catch(e){
                if(e == "fatal json error"){
                    json_field = false;
                }
                try{
                    if(jsonobj[fieldname] !== undefined){
                        json_field = jsonobj[fieldname];
                    }else{
                        throw "fatal json error";
                    }
                }catch(er){
                    if(er == "fatal json error"){
                        json_field = false;
                    }
                }
            }finally{
                return json_field;
            }
        };

        var getPlayerID = function (playertype,mediatype){
            if(options.playertypes[playertype].controls){
                return options.mediatypes[mediatype].playerid;
            }else{
                return options.mediatypes[mediatype].playerid_noc;
            }
        };
        
        $.fn.setDynamicContent = function (field,string){
            if(string !== false){
                if(field == "title"){
                    if(string){
                        $(this).find('.dyn_title').html(string).show();
                    }
                }else if(field == "caption"){
                    if(string){
                        $(this).find('.dyn_caption').html(string).show();
                    }
                }else{
                    return false;
                }
            }else{
                return false;
            }
        };
        
        $.fn.buildPlayer = function (playertype,swf_url){
                $(this).flash({
                    height: options.playertypes[playertype].height,
                    width: options.playertypes[playertype].width,
                    wmode: "transparent",
                    allowFullScreen: "true",
                    allowScriptAccess: "always",
                    params: {seamlesstabbing:false,allowFullScreen: true,allowScriptAccess: "always",swliveconnect: true},
                    swf: swf_url  
                });
                var title_markup    = null;
                var caption_markup  = null;
                
                if(options.playertypes[playertype].title){
                    title_markup    = $(options.playertypes[playertype].title); 
                    title_markup.addClass('dyn_title').hide();  
                }

                if(options.playertypes[playertype].description){
                    caption_markup  = $(options.playertypes[playertype].description);
                    caption_markup.addClass('dyn_caption').hide();
                }

                if(options.playertypes[playertype].title_bottom !== true){
                    $(this).prepend(title_markup);
                    $(this).append(caption_markup);
                }else{
                    $(this).append(title_markup);
                    $(this).append(caption_markup); 
                }
                

        };
        
        var buildSWFURL = function (playertype,mediatype,mediaID){
            var playerID = getPlayerID(playertype,mediatype);

            var swf_url = 
            options.service_url + 
            '?playerID='            + getPlayerID(playertype,mediatype) + 
            '&'                     + options.mediatypes[mediatype].urlpostfix + mediaID +
            '&width='               + options.playertypes[playertype].width +
            '&height='              + options.playertypes[playertype].height +
            '&publisherID='         + options.mediatypes[mediatype].publisher_id +
            '&cacheAMFURL='         + encodeURIComponent(options.cache_url) + 
            '&bgcolor=%23FFFFFF'    +
            '&additionalAdTargetingParams=%3Bressort%3D'+options.ressort;
            return swf_url;
        };
        
        return this.each (function () {

        if($.flash.available){
            // get array of lasses from zol_video div 
            myClasses = $(this).attr('class').split(' ');
            var playertype  = '';
            var mediatype   = '';
            var mediaID     = '';
            // get playertype, mediatype and mediaID
            for (var i = 0; i < myClasses.length; i++ ) {
                if(options.playertypes[myClasses[i]]!== undefined){
                   playertype  = myClasses[i];
                }
                if(options.mediatypes[myClasses[i].substring(3,0)]!== undefined){
                    mediatype   = myClasses[i].substring(3,0);
                    mediaID     = getID(mediatype, myClasses[i],3);
                }
            }

            // error handler 
            try {
                // try to build the player and swfurl
                
                // throws exeption if variables (classes) do not exist
                $(this).buildPlayer(playertype,buildSWFURL(playertype,mediatype,mediaID));
                
                // get JSON Data
                $(this).getMeta(mediatype,playertype,mediaID);
                
                if(options.playertypes[playertype].wrap === undefined){
                    throw "nowrap";
                }
            } catch (e) {
        

                if(e == "nowrap"){
                    options.playertypes[playertype].wrap = '';
                }
            }finally{
                $(this).addClass(options.playertypes[playertype].wrap);
            }
        }else{
            $(this).html('<p class="noflash"><strong>Leider konnte kein Flashplayer in ihrem Browser gefunden werden.</strong> <br />Dieser wird jedoch zwingend für die Videos auf ZEIT Online benötigt. Bitte installieren sie die <a href="http://www.adobe.com/go/getflashplayer">neuste Adobe Flashplayer Version</a>.</p>');
        }
        });
    };
})(jQuery);